{
  "name": "node_boilerplate_2023",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "start": "node dist/app/lib/server.js",
    "dev": "nodemon -L app/lib/server.ts",
    "client": "webpack serve --config webpack/webpack.config.js --env env=dev",
    "build": "webpack --config webpack/webpack.config.js --env env=prod",
    "npm-i": "npm i",
    "install-app": "docker-compose build",
    "serve": "npm run npm-i && docker-compose up",
    "server-build": "tsc && cp -r ./app/lib/config ./dist/ && cp -r ./app/lib/db ./dist/",
    "mysql": "docker exec -it mysql-container mysql -u practice -p",
    "test": "mocha --recursive test/",
    "update": "npm update --save && npm update --save-dev",
    "rm-node-module": "rm -rf ./node_modules",
    "stop-containers": "if RUNNING_CONTAINERS=$(docker ps -q); then [ -n \"$RUNNING_CONTAINERS\" ] && docker stop $RUNNING_CONTAINERS || echo 'No running containers to stop'; else echo 'Failed to get running containers'; fi",
    "remove-containers": "if ALL_CONTAINERS=$(docker ps -qa); then [ -n \"$ALL_CONTAINERS\" ] && docker rm $ALL_CONTAINERS || echo 'No containers to remove'; else echo 'Failed to get all containers'; fi",
    "remove-images": "IMAGES=$(docker images -qa) && [ -n \"$IMAGES\" ] && docker rmi -f $IMAGES || echo 'No images to remove'",
    "remove-volumes": "VOLUMES=$(docker volume ls -qf \"dangling=true\") && [ -n \"$VOLUMES\" ] && docker volume rm $VOLUMES || echo 'No volumes to remove'",
    "docker-container-prune": "docker container prune -f",
    "docker-system-prune": "docker system prune -f",
    "docker-nuke": "npm run rm-node-module && npm run stop-containers && npm run remove-containers && npm run remove-images && npm run remove-volumes && npm run docker-container-prune && npm run docker-system-prune"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "axios": "^1.6.7",
    "body-parser": "^1.20.2",
    "dotenv": "^16.4.5",
    "express": "^4.18.3",
    "html-entities": "^2.5.2",
    "js-yaml": "^4.1.0",
    "knex": "^3.1.0",
    "mysql2": "^3.9.2",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0"
  },
  "devDependencies": {
    "@babel/core": "^7.24.0",
    "@babel/preset-env": "^7.24.0",
    "@babel/preset-react": "^7.23.3",
    "@babel/preset-typescript": "^7.23.3",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.11",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/js-yaml": "^4.0.9",
    "@types/knex": "^0.16.1",
    "@types/node": "^20.14.7",
    "@types/react": "^18.2.64",
    "@types/react-dom": "^18.2.21",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.6",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "babel-loader": "^9.1.3",
    "cors": "^2.8.5",
    "css-loader": "^6.10.0",
    "html-webpack-plugin": "^5.6.0",
    "nodemon": "^3.1.0",
    "react-refresh": "^0.14.0",
    "request": "^2.88.2",
    "sass": "^1.71.1",
    "sass-loader": "^13.3.3",
    "style-loader": "^3.3.4",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.5.2",
    "webpack": "^5.90.3",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^4.15.1",
    "webpack-merge": "^5.10.0"
  }
}
